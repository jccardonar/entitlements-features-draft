<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ivy-entitlements-00" category="info" submissionType="IETF" xml:lang="en">
  <front>
    <title abbrev="entitlement inventory">A YANG module for entitlement inventory</title>

    <author initials="M." surname="Palmero" fullname="Marisol Palmero" role="editor">
      <organization>Cisco Systems</organization>
      <address>
        <email>mpalmero@cisco.com</email>
      </address>
    </author>
    <author initials="C." surname="Cardona" fullname="Camilo Cardona" role="editor">
      <organization>NTT</organization>
      <address>
        <email>camilo@gin.ntt.net</email>
      </address>
    </author>
    <author initials="D." surname="Lopez" fullname="Diego Lopez" role="editor">
      <organization>Telefonica I+D</organization>
      <address>
        <email>diego.r.lopez@telefonica.com</email>
      </address>
    </author>

    <date year="2024" month="October" day="22"/>

    <area>OPS</area>
    <workgroup>IVY</workgroup>
    <keyword>entitlement</keyword> <keyword>inventory</keyword> <keyword>assets</keyword> <keyword>features</keyword>

    <abstract>


<?line 36?>

<t>This document proposes a YANG module with an inventory of entitlements. The model helps manage details about entitlements, such as  their scope, how they’re assigned, and when they expire. The model introduces the a descriptive definition of features and use restriction that can help a entitlement admistration an understanding of the state of their assets and the capabilities available across the network.</t>



    </abstract>



  </front>

  <middle>


<?line 40?>

<section anchor="introduction"><name>Introduction</name>

<t>An entitlement grants specific holders the right to access particular features of one or more assets. The use of these features may be restricted in various ways, such as by duration, usage limits, or predefined conditions. Having information a centralizaed point with the state of the entitlements of the network can save time and facilitate decision making. In this document, we propose a yang model that, complementing the network inventory module, can provide the information the asset/entitlement adminstrator needs for this.</t>

<section anchor="glosary"><name>Glosary</name>

<t>TODO. We need the distinction between licenses and entitlements.</t>

</section>
<section anchor="requirements-language"><name>Requirements language</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.
<?line -6?></t>

</section>
<section anchor="QUESTIONS"><name>Scope of the entitlement model</name>

<t>The entitlement model aims to provide an inventory of entitlements. This includes the entitled holders and the features to which they are entitled. Additionally, it offers  information into the restrictions of the operation of the different assets (network entities and components).</t>

<t>In general, this model seeks to address the following questions:</t>

<t><list style="symbols">
  <t>What entitlements are administered/owned by the organization?</t>
  <t>How are entitlements restricted to some assets and holders?</t>
  <t>What entitlements are assigned or installed on each assets?</t>
  <t>What constraints do the current entitlements impose in the assets functionality?</t>
  <t>Does the entitlement imposses any kind of global restrictions? What are they?</t>
  <t>What are the restrictions that each asset due to the entitlements it holds?</t>
</list></t>

<t>These points will be elaborated further in section <xref target="ENTMODEL"/>. Initially, we will delineate some aspects not covered by this model, followed by an explanation of features.</t>

<t>The model is designed with flexibility in mind, allowing for expansion through the utilization of tools provided by YANG.</t>

</section>
<section anchor="out-of-scope-elmements-of-the-dlmo-entitlement-model"><name>Out of scope elmements of the DLMO entitlement model</name>

<t>The realm of entitlements or licenses is inherently complex, presenting challenges in creating a model that can comprehensively encompass all scenarios without ambiguity. While we attempt to address various situations through examples and use cases, we  acknowledge that the model might not be able to cover all corner cases without ambiguity. In such cases, we recommend that implementations provide additional documentation to clarify potential ambiguities.</t>

<t>The current model does not aim to serve as a catalog of licenses. While it may accommodate basic scenarios, it does not aim to cover the full spectrum of license characteristics, which can vary significantly. Instead, our focus is on providing a general framework for describing relationships and answering the questions we expose in section <xref target="QUESTIONS"/>.</t>

<t>To clarify, here are some questions that our model does not attempt to answer:</t>

<t><list style="symbols">
  <t>What are the implications of purchasing a specific entitlement?</t>
  <t>Which entitlement should I acquire to get a specific feature?</t>
  <t>Is license migration feasible?</t>
  <t>What features will be allowed if I install an entitlement in specific device?</t>
  <t>Features or restrictions that depend on each user. We are not covering this in the current version of this document, but it could be done if we expand the holders indentification.</t>
</list></t>

<t>We emphasize that the model primarily addresses the commercial utilization of features, rather than access control. For instance, if a network device cannot be configured an arbitrary network protocol (e.g. MPLS) due to licensing restrictions, this implies that the organization owning the router (the holder  in this scenario) is not permitted to utilize the MPLS feature. This distinction is separate from, for instance, the ability of an user to configure MPLS due to access control limitations.</t>

</section>
<section anchor="features-or-maybe-capabilities"><name>Features (or maybe capabilities?)</name>

<t>Entitlements entitle a holder to use a feature of an asset. In some cases, this feature can be simply the use of the asset itself (e.g., the use of software, the use of network equipment). However, in common cases, assets can offer a rich array of features that are subject to entitlement levels.</t>

<t>Under the entitlement  model, we do not attempt to model features exhaustively. Instead, we provide a descriptive definition of features, which falls under the responsibility of the model's implementers. Also, the main philosofy behind the model is to only list those features that are allowed/restricted based on the entitlements that the organization coutns with. The features under the entitlmeents model are not there to list all features available by an asset, but only those that depend on the entitlmeent state of the asset.</t>

<t>We'll provide examples of feature definitions in our use cases.</t>

</section>
</section>
<section anchor="ENTMODEL"><name>Entitlements Modeling</name>

<t>The model aims to provide a framework for addressing the questions outlined in Section <xref target="QUESTIONS"/> across various use cases. In this section, we delve deeper into these questions, offering examples to demonstrate why some are more complex than initially perceived.</t>

<t>The entitlement model is included in Secion <xref target="MODEL"/>. We will describe how each of the questions in Section <xref target="QUESTIONS"/> are responded by the model. First, we will introduce  a toy example to show how each question can be answered.</t>

<section anchor="toy-example-for-entitlement-model"><name>Toy example for entitlement model</name>

<t>As a toy example for the model we'll use the next scenario: Two network elements (routers), each with a line card, and a port.  Both routers are of the same type (generic_router), which requires an entitlement to operate. The router entitlement is issued for each device specifically. The line card also requires a license to operate, and an extra license to allow for more than 100Gbps per port and breakout functionality, but they are not issued for each router.  Both routers have the generic and the line card license, but one is missing the port license, therefore the ports are limited.</t>

<t>The resulting json with these scenario is attached next:</t>

<figure title="Toy scenario for entitlement model description" anchor="toyexample"><sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-network-inventory-entitlements:network-inventory-entitlement\
s": {
    "features": {
      "entitlement-feature-class": [
        {
          "entitlement-feature-class": "basic-feature",
          "feature": [
            {
              "feature-id": "acme_router_generic_operation"
            },
            {
              "feature-id": "acme_line_card_generic_operation"
            },
            {
              "feature-id": "acme_port_400gbps_breakpout"
            }
          ]
        }
      ]
    },
    "entitlements": {
      "entitlement": [
        {
          "uid": "ff31c766-1ed1-59f7-a043-030de623f1a7",
          "state": "active",
          "product-id": "acme_router_generic_operation",
          "entitlement-attachements": {
            "holders": {
              "organizations_names": {
                "organizations": [
                  "main_organization"
                ]
              }
            },
            "assets": {
              "network-inventory": {
                "network-elements": [
                  "router_one"
                ]
              }
            }
          }
        },
        {
          "uid": "f68600ee-aaa8-55ea-be3b-d7e66c9734b1",
          "state": "active",
          "product-id": "general_component_license_operation",
          "entitlement-attachements": {
            "holders": {
              "organizations_names": {
                "organizations": [
                  "main_organization"
                ]
              }
            }
          }
        },
        {
          "uid": "fb8a776a-0c8e-553a-a5cc-bf97e1a949b5",
          "state": "active",
          "product-id": "line_card_full_port_license",
          "restrictions": {
            "entitlment-restriction-class": [
              {
                "entitlement-restriction-class": "entitlement-global\
-restriction-generic",
                "restriction": [
                  {
                    "description": "Number of times the license has \
been use in assets",
                    "units": "number_of_installed_licenses",
                    "max-value": 5,
                    "current-value": 1,
                    "restriction-id": "restriction_0"
                  }
                ]
              }
            ]
          },
          "entitlement-attachements": {
            "holders": {
              "organizations_names": {
                "organizations": [
                  "main_organization"
                ]
              }
            }
          }
        }
      ]
    }
  },
  "ietf-network-inventory:network-inventory": {
    "network-elements": {
      "network-element": [
        {
          "ne-id": "router_one",
          "components": {
            "component": [
              {
                "component-id": "acme_router_one_line_card",
                "class": "iana-hardware:module"
              },
              {
                "component-id": "acme_router_one_port_400gbps",
                "class": "iana-hardware:module"
              }
            ]
          },
          "ietf-network-inventory-entitlements:entitlement-informati\
on": {
            "entitlements": {
              "entitlment": [
                {
                  "entitlement-id": "ff31c766-1ed1-59f7-a043-030de62\
3f1a7"
                },
                {
                  "entitlement-id": "f68600ee-aaa8-55ea-be3b-d7e66c9\
734b1",
                  "component-id": "acme_router_one_line_card"
                },
                {
                  "entitlement-id": "fb8a776a-0c8e-553a-a5cc-bf97e1a\
949b5",
                  "component-id": "acme_router_one_line_card"
                }
              ]
            },
            "feature-information": {
              "feature-use": [
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_router_generic_operation",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "ff31c766-1ed1-59f7-a043-0\
30de623f1a7"
                      }
                    ]
                  }
                },
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_line_card_generic_operation",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "f68600ee-aaa8-55ea-be3b-d\
7e66c9734b1"
                      }
                    ]
                  },
                  "component-id": "acme_router_one_line_card"
                },
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_port_400gbps_breakpout",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "fb8a776a-0c8e-553a-a5cc-b\
f97e1a949b5"
                      }
                    ]
                  },
                  "component-id": "acme_router_one_port_400gbps"
                }
              ]
            }
          }
        },
        {
          "ne-id": "router_two",
          "components": {
            "component": [
              {
                "component-id": "acme_router_two_line_card",
                "class": "iana-hardware:module"
              },
              {
                "component-id": "acme_router_two_port_400gbps",
                "class": "iana-hardware:module"
              }
            ]
          },
          "ietf-network-inventory-entitlements:entitlement-informati\
on": {
            "entitlements": {
              "entitlment": [
                {
                  "entitlement-id": "ff31c766-1ed1-59f7-a043-030de62\
3f1a7"
                },
                {
                  "entitlement-id": "f68600ee-aaa8-55ea-be3b-d7e66c9\
734b1",
                  "component-id": "acme_router_two_line_card"
                }
              ]
            },
            "feature-information": {
              "feature-use": [
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_router_generic_operation",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "ff31c766-1ed1-59f7-a043-0\
30de623f1a7"
                      }
                    ]
                  }
                },
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_line_card_generic_operation",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "f68600ee-aaa8-55ea-be3b-d\
7e66c9734b1"
                      }
                    ]
                  },
                  "component-id": "acme_router_two_line_card"
                },
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_port_400gbps_breakpout",
                  "in-use": false,
                  "allowed": false,
                  "supporting-entitlements": {
                    "entitlement": []
                  },
                  "component-id": "acme_router_two_port_400gbps"
                }
              ]
            },
            "asset-restrictions": {
              "asset-restriction-class": [
                {
                  "asset-restriction-class": "entitlement-asset-rest\
riction-basic",
                  "asset-restriction": [
                    {
                      "description": "Bandwidth limit",
                      "units": "Gbps",
                      "max-value": 100,
                      "current-value": 79,
                      "component-id": "acme_router_two_port_400gbps",
                      "asset-restriction-id": "restriction_0"
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="what-entitlements-are-administeredowned-by-the-organization-entitlements-inventory"><name>What entitlements are administered/owned by the organization (entitlement's inventory)?</name>

<t>The model should facilitate listing all entitlements associated with a set of assets under the same asset administration. In scenarios where entitlements are tied to assets, the asset itself could provide this information. Alternatively, providers may support something similar to a license server, which could house comprehensive information regarding an organization's licenses.</t>

<t>Within the model, all entitlements and features are listed directly under the network-inventory-entitlements container of the model.</t>

<t>Just by listing the entitlements, and provide their basic information, a netconf client will be able to retrieve basic inventory information of existing entitlements, without processing the more complex relationships that we will describe in the next sections.</t>

<t>Note that the model uses lists based on classes on multiple parts to be able to extend functionality. We will provide examples of how this can be done in posterior releases of this document.</t>

<t>The entitlements and features list do not specify which the assets (network elments or components) are actually assigned the entitlements, either through an installation  or a similar operation. For this, we augment the network elements form the network-inventory <xref target="I-D.draft-ietf-ivy-network-inventory-yang-03"/> model with a new container called entitlement-information. This container  hold information of the state of entitlmenets in the asset.</t>

<t>The entiltment container holds a container called entitlement-attachements which relates  how the entitlement is COMMERCIALLY linked to holders or assets. Note that there is a difference between an entilement being attached to an asset and an entilement being installed in the asset. In the former, we mean that the license was issued only for one (or more) assets.  Some licenses actually can be open but have a limited number of installation, just as we have in our toy example. Other licenses might be openly contraint to geography localtion. We are not deailing with these complex cases now, but the container can be expanded for this in the future.</t>

<t>In our toy example, we can extract the information in a single table. We show the summary in the next figure.</t>

<figure title="Entitlement report for toy case" anchor="entitlmenet_report"><artwork><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

Entry 0:
  name: ent_acme_router_generic_operation_one
  product_id: acme_router_generic_operation
  state: active
  attached_assets: router_one
  assets_where_is_installed: router_one,router_two
  restrictions_apply: False

Entry 1:
  name: ent_acme_line_card_generic_operation
  product_id: general_component_license_operation
  state: active
  attached_assets: 
  assets_where_is_installed: router_one-acme_router_one_line_card,ro\
uter_two-
    acme_router_two_line_card
  restrictions_apply: False

Entry 2:
  name: ent_acme_line_card_full_ports
  product_id: line_card_full_port_license
  state: active
  attached_assets: 
  assets_where_is_installed: router_one-acme_router_one_line_card
  restrictions_apply: True
]]></artwork></figure>

<t>Entitlements might be listed by multiple assets. For instance, a license server, functioning as an asset, might list an entitlement, while the asset entitled by the license might also list it. Proper identification of entitlements is imperative to ensure consistency across systems, enabling monitoring systems to recognize when multiple assets list the same entitlement.</t>

<t>Furthermore, there are cases where an authorized asset might not be aware of the covering license. Consider the scenario of a site license, wherein any device under the site may utilize a feature without explicit knowledge of the covering license. In such cases, asset awareness relies on management controls or a service license capable of listing it.</t>

<t>The model accommodates listing entitlements acquired by the organization but not yet applied or utilized by any actor/asset. For these "pending" entitlements, logistical constraints may arise in informing their existence, as there must be at least one element exporting the model that is aware of their existence.</t>

<t>Some entitlements are inherently associated with an holder, such as organization or an user. For example, a software license might be directly attached to a user. Also, the use of a network device might come with a basic license provided solely to an organization. Some entitlements could be assigned to a more abstract description of holders, such as people under a juristiction a geographical area. The model contains basic information about this, but it can be extended in the future to be more descriptive.</t>

</section>
<section anchor="what-is-the-link-between-a-entitlement-and-assets"><name>What is the link between a entitlement and assets?</name>

<t>Entitlements and assets are linked in the model in two ways. Entitlemenets might be "attached" to assets, and assets include (or have installed) entitlements. The former is included under the network-inventory-entitlements list container, while the former is included as an augmenetation in the network element.</t>

<t>When an asset lists an entitlement, it means that the entitlement is installed in the asset. An entitlement that is not listed by any asset means that is not being used (even if it is attached to an asset, as we will see later).</t>

<t>Attaching an entitlement to one or multiple asset means that the entitlement is exclusively used by that asset. However, this is not mandatory and there are many licenses that are open and can be installed at any asset of certain type.</t>

<t>While attachment is optional, the model should be capable of expressing attachment in various scenarios. The model can be expanded to list to which assets an entitlement is aimed for, when this link is more vague, such as a site license (e.g., assets located in a specific site), or more open licenses (e.g., free software for all users subscribed to a streaming platform).</t>

<t>It's important to note that the current model does not provide information on whether an entitlement can be reassigned to other devices (e.g., fixed or floating license). Such scenarios fall under the "what if" category, which is not covered by this model.</t>

<t>The list of attached assets, and the assets where the entitlements are installed is included already in the figure <xref target="entitlmenet_report"/>.</t>

</section>
<section anchor="what-constraints-do-assets-under-the-current-entitlements-impose-on-the-actors-use-of-the-assets-features"><name>What constraints do assets, under the current entitlements, impose on the actors' use of the asset's features?</name>

<t>Assets provide various features, which may be restricted based on the availability of proper entitlements. A entitlement manager might be interested in the features that are not available to use on the assets, and the features that are available.</t>

<t>The model includes this information on the entitlement-information/feature-information/feature-use which is the entitlement-model adds to the network-elements from the network inventory model..</t>

<t>An entitlement  grants permission to access specific features associated with an asset. However, in some cases, there are limitations or restrictions on the use of these features. it's essential for the model to provide information on the status of the entitlement, particularly if it is at risk of being infringed upon. This can help organizations stay informed about their entitlement usage and take necessary actions to prevent potential violations or overuse of features.</t>

<t>All the information related to how an asset provides a feature to actors is included under the feature container wihtin the asset class, under the entitlements-info container.</t>

<figure title="Features report for toy case" anchor="feature_report"><artwork><![CDATA[
Entry 0:
  feature_name: acme_line_card_generic_operation
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_line_card_generic_operation
  restrictions_apply: False
  asset: router_one-acme_router_one_line_card

Entry 1:
  feature_name: acme_line_card_generic_operation
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_line_card_generic_operation
  restrictions_apply: False
  asset: router_two-acme_router_two_line_card

Entry 2:
  feature_name: acme_port_400gbps_breakpout
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_line_card_full_ports
  restrictions_apply: False
  asset: router_one-acme_router_one_port_400gbps

Entry 3:
  feature_name: acme_port_400gbps_breakpout
  allowed: False
  in_use: False
  supporting_entitlements: 
  restrictions_apply: False
  asset: router_two-acme_router_two_port_400gbps

Entry 4:
  feature_name: acme_router_generic_operation
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_router_generic_operation_one
  restrictions_apply: False
  asset: router_one

Entry 5:
  feature_name: acme_router_generic_operation
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_router_generic_operation_one
  restrictions_apply: False
  asset: router_two
]]></artwork></figure>

</section>
<section anchor="how-are-entitlements-utilized-which-actors-are-using-features-backed-by-entilements-and-in-cases-where-the-entitlements-provide-limits-how-close-the-use-of-those-features-is-to-those-limits"><name>How are entitlements utilized? Which actors are using features backed by entilements? And in cases where the entitlements provide limits, how close the use of those features is to those limits.</name>

<figure title="Restrictions  report for toy case" anchor="asset_restrictions"><artwork><![CDATA[
Entry 0:
  description: Bandwidth limit
  units: Gbps
  max-value: 100
  current-value: 79
  asset: router_two-acme_router_two_port_400gbps
]]></artwork></figure>

</section>
</section>
<section anchor="MODEL"><name>Entitlements model</name>

<t>Here is the tree for the entitlement model.</t>

<figure title="Tree of entitlement model" anchor="tree"><artwork><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

module: ietf-network-inventory-entitlements
  +--rw network-inventory-entitlements
     +--rw features
     |  +--rw entitlement-feature-class* [entitlement-feature-class]
     |     +--rw entitlement-feature-class    identityref
     |     +--rw feature* [feature-id]
     |        +--rw feature-id                      string
     |        +--rw extended-feature-description?   string
     +--rw entitlements
        +--rw entitlement* [uid]
           +--rw uid                         string
           +--rw product-id?                 string
           +--rw state?                      entitlement-state-t
           +--rw renewal-profile
           |  +--rw activation-date?   yang:date-and-time
           |  +--rw expiration-date?   yang:date-and-time
           +--rw restrictions
           |  +--rw entitlment-restriction-class* [entitlement-restr\
iction-class]
           |     +--rw entitlement-restriction-class    identityref
           |     +--rw restriction* [restriction-id]
           |        +--rw restriction-id    string
           |        +--rw description?      string
           |        +--rw units?            string
           |        +--rw max-value?        int32
           |        +--rw current-value?    int32
           +--rw capabilities
           |  +--rw capability-class* [capability-class]
           |     +--rw capability-class    identityref
           |     +--rw capability* [capability-id]
           |        +--rw capability-id           string
           |        +--rw feature-class?          -> /network-invent\
ory-entitlements/features/entitlement-feature-class/entitlement-feat\
ure-class
           |        +--rw feature-id?             -> /network-invent\
ory-entitlements/features/entitlement-feature-class[entitlement-feat\
ure-class=current()/../feature-class]/feature/feature-id
           |        +--rw resource-description?   string
           |        +--rw resource-units?         string
           |        +--rw resource-amount?        int32
           +--rw parent-entitlement-uid?     -> ../../entitlement/uid
           +--rw entitlement-attachements
              +--rw universal-access?   boolean
              +--rw holders!
              |  +--rw organizations_names
              |  |  +--rw organizations*   string
              |  +--rw users_names
              |     +--rw users*   string
              +--rw assets
                 +--rw network-inventory
                    +--rw network-elements*   string
                    +--rw components
                       +--rw component* [network-element component-i\
d]
                          +--rw network-element    string
                          +--rw component-id       string

  augment /nwi:network-inventory/nwi:network-elements/nwi:network-el\
ement:
    +--rw entitlement-information
       +--rw entitlements
       |  +--rw entitlment* [entitlement-id]
       |     +--rw entitlement-id    -> /network-inventory-entitleme\
nts/entitlements/entitlement/uid
       |     +--rw component-id?     -> ../../../../nwi:components/c\
omponent/component-id
       +--rw feature-information
       |  +--rw feature-use* [feature-class feature-id]
       |     +--rw feature-class              -> /network-inventory-\
entitlements/features/entitlement-feature-class/entitlement-feature-\
class
       |     +--rw feature-id                 -> /network-inventory-\
entitlements/features/entitlement-feature-class[entitlement-feature-\
class=current()/../feature-class]/feature/feature-id
       |     +--rw component-id?              -> ../../../../nwi:com\
ponents/component/component-id
       |     +--rw supporting-entitlements
       |     |  +--rw entitlement* [entitlement-id]
       |     |     +--rw entitlement-id    -> ../../../../../entitle\
ments/entitlment/entitlement-id
       |     +--rw allowed?                   boolean
       |     +--rw in-use?                    boolean
       +--rw asset-restrictions
          +--rw asset-restriction-class* [asset-restriction-class]
             +--rw asset-restriction-class    identityref
             +--rw asset-restriction* [asset-restriction-id]
                +--rw component-id?           -> ../../../../../nwi:\
components/component/component-id
                +--rw asset-restriction-id    string
                +--rw description?            string
                +--rw resource-name?          string
                +--rw units?                  string
                +--rw max-value?              int32
                +--rw current-value?          int32
                +--rw feature-class?          -> ../../../../feature\
-information/feature-use/feature-class
                +--rw feature-id?             -> ../../../../feature\
-information/feature-use[feature-class=current()/../feature-class]/f\
eature-id
]]></artwork></figure>

<t>The full entitlement model comes in the next figure.</t>

<figure title="Complete entitlement model" anchor="full_model"><sourcecode type="yang"><![CDATA[
=============== NOTE: '\\' line wrapping per RFC 8792 ===============

module ietf-network-inventory-entitlements-features {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-inventory-enti\
\tlements-features";
  prefix nwie;

  import ietf-yang-types {
    prefix yang;
  }
  import ietf-network-inventory {
    prefix nwi;
    reference
      "RFCxxxx: IETF Network Inventory";
  }

  organization
    "IETF IVY Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ivy/>
     WG List:  <mailto:inventory-yang@ietf.org>

     Editor:   Marisol Palmero
               <a>

     Editor:   Camilo Cardona
               <>

     Editor:   Diego
               <>";
  description
    "This module defines a base model for retrieving network
     inventory.

     The model fully conforms to the Network Management
     Datastore Architecture (NMDA).

     Copyright (c) 2024 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.

  revision 2024-04-09 {
    description
      "Initial version";
    reference
      "RFC XXXX:.";
  }

  identity entitlement-capability-description {
    description
      "Base identity for classes of LMO. Provides just an id, and a";
  }

  identity entitlement-global-restriction {
    description
      "Base identify for restriction. It does not provide anything m\
\eaninful.";
  }

  identity entitlement-feature {
    description
      "Base identity for classes of LMO. Provides just an id, and a
       extended description";
  }

  identity basic-feature {
    base entitlement-feature;
    description
      "Base identity for classes of LMO. Provides just an id, and a
       extended description";
  }

  typedef entitlement-state-t {
    type enumeration {
      enum inactive {
        description
          "Inactive State";
      }
      enum active {
        description
          "Active State";
      }
      enum unknown {
        description
          "Unknown State";
      }
    }
    description
      "Entitlement State Type";
  }

  identity test {
    base nwi:non-hardware-component-class;
  }

  container network-inventory-entitlements {
    container features {
      list entitlement-feature-class {
        description
          "Optional list of features known by this data server. ";
        key "entitlement-feature-class";
        leaf entitlement-feature-class {
          type identityref {
            base entitlement-feature;
          }
          must "derived-from-or-self(current(), "
             + " 'entitlement-feature')";
        }
        list feature {
          key "feature-id";
          leaf feature-id {
            type string;
            description
              "Feature ID.";
          }
          leaf extended-feature-description {
            type string;
            description
              "Extended feature description of the feature, if neede\
\d";
          }
        }
      }
    }
    container entitlements {
      list entitlement {
        key "uid";
        description
          "The container includes attributes for entitlements";
        leaf uid {
          type string;
          description
            "Unique Entitlement Identifier";
        }
        leaf product-id {
          type string;
          description
            "An optional product id for the entitlemnet, if one exis\
\ts";
        }
        leaf state {
          type entitlement-state-t;
          description
            "Entitlement state; e.g., active, inactive, or unknown";
        }
        container renewal-profile {
          description
            "Profile of entitlement renewal status and information";
          leaf activation-date {
            type yang:date-and-time;
            description
              "Activation Date";
          }
          leaf expiration-date {
            type yang:date-and-time;
            description
              "Expiration Date";
          }
        }
        container restrictions {
          description
            "Global entitlement usage restrictions";
          list entitlment-restriction-class {
            key "entitlement-restriction-class";
            leaf entitlement-restriction-class {
              type identityref {
                base entitlement-global-restriction;
              }
              must "derived-from-or-self(current(), "
                 + " 'entitlement-global-restriction')";
            }
            list restriction {
              key "restriction-id";
              leaf restriction-id {
                description
                  "A string that uniquelly identifies the restrictio\
\ns. It might not be meaninfully.";
                type string;
              }
            }
          }
        }
        // TODO:  We could have a list of features the entitlement c\
\overs, but this would be 
        // only for description purposes since an entitlement is onl\
\y meaningful when 
        // allowing a feature under an asset
        container capabilities {
          description
            "Descriptive list of features the entitlement grants";
          list capability-class {
            key "capability-class";
            leaf capability-class {
              type identityref {
                base entitlement-capability-description;
              }
              must "derived-from-or-self(current(), "
                 + " 'entitlement-capability-description')";
              description
                "Feature type";
            }
            list capability {
              key "capability-id";
              leaf capability-id {
                description
                  "A string that uniquelly identifies the restrictio\
\ns. It might not be meaninfully.";
                type string;
              }
            }
          }
        }

      leaf parent-entitlement-uid {
        type leafref {
          path "../../entitlement/uid";
        }
        must '. != current()/../../entitlement/uid' {
          error-message "An entitlement cannot be its own parent.";
        }
        description
          "Some entitlements are delivered in 'packages'. The parent\
\-entitlement relationship aims
           at covering this case. If the package has an id, it can b\
\e modeled as an entitlement
           covering multiple ones. This can also cover the case of a\
\n entilement that can 
           be divided in multiple parts";
      }
      container entitlement-attachements {
        description
          "An entilement entitles an entity to the use of a feature \
\under an
           asset.";

        leaf universal-access {
          type boolean;
          default "false";
          description "Optional flag to signal that the entitlment i\
\s not attached to any holder, that is, the permissions granted are \
\for everybody.";
        }

        container holders {

          presence "The holders container should be created only whe\
\n the data server
          can provide information of the holder of the entitlement.";

          must "not(../universal-access = 'true')" {
            error-message "The 'holders' container cannot exist when\
\ universal-access is set.";
          }

          description
            "The entities to which the entilements grants permissios\
\n to.
             There can be multiple of them. 
             The container SHOULD not exist if the data server does \
\not known
             of the holders of the entitlement. An empty holders SHO\
\ULD be avoided, instead
             the universal-access flag should be set.
             It might be expanded to cover selection cases e.g. all \
\users in
             a special country.";

          container organizations_names {
            leaf-list organizations {
              type string;
            }
          }
          container users_names {
            leaf-list users {
              type string;
            }
          }
          // We could expand this to more generic selections of users
          // or organizations, or in general add a flexible way of e\
\xpanding it
          // via keying by a instance
        }
        container assets {
          container network-inventory {
            leaf-list network-elements {
              type string;
            }
            container components {
              list component {
                key "network-element component-id";
                leaf network-element {
                  type string;
                }
                leaf component-id {
                  type string;
                }

              }
            }
          }
          // We could expand this to more generic selections of users
          // or organizations, or in general add a flexible way of e\
\xpanding it
          // via keying by a instance
        }
        // We could have other container with more descriptive set o\
\f assets
        // such as "all laptops in school Y (site license)"

      }
      }
    }
  }

  // Let us define the entitlement capabilities for feature and reso\
\ures
  // An entitlmeent capability will add a feature
  // We leave open many things here, that's why iti s only descripti\
\ve

  identity entitlement-capability-feature-description {
    base entitlement-capability-description;
  }

  augment "/network-inventory-entitlements/entitlements/entitlement/\
\capabilities/capability-class/capability" {
    when "derived-from-or-self(../capability-class, "
       + " 'entitlement-capability-feature-description')";
    leaf feature-class {
      type leafref {
        path "/network-inventory-entitlements/features/entitlement-f\
\eature-class/entitlement-feature-class";
      }
      description
        "Class of feature to enable";
    }
    leaf feature-id {
      type leafref {
        path "/network-inventory-entitlements/features/entitlement-f\
\eature-class[entitlement-feature-class="
           + "current()/../feature-class]/feature/feature-id";
      }
      description
        "Feature that this entitlement enables on the asset";
    }
  }

  // A resource capability will extend the resources of an asset
  // here we dont provide much context, it is just for simple cases

  identity entitlement-capability-resource-description {
    base entitlement-capability-description;
  }

  augment "/network-inventory-entitlements/entitlements/entitlement/\
\capabilities/capability-class/capability" {
    when "derived-from-or-self(../capability-class, "
       + " 'entitlement-capability-resource-description')";
    leaf resource-description {
      type string;
      description
        "Description of the resource capability";
    }
    leaf resource-units {
      type string;
    }
    leaf resource-amount {
      type int32;
    }
  }

  identity entitlement-global-restriction-generic {
    description
      "A generic restriction with a maximum of a resource, and its c\
\urrent value.";
    base entitlement-global-restriction;
  }

  augment "/network-inventory-entitlements/entitlements/entitlement/\
\restrictions/entitlment-restriction-class/restriction" {
    when "derived-from-or-self(../entitlement-restriction-class, "
       + "'entitlement-global-restriction-generic')";
    leaf description {
      type string;
      description
        "Description of the resource capability";
    }
    leaf units {
      type string;
    }
    leaf max-value {
      type int32;
    }
    leaf current-value {
      type int32;
    }
  }

  identity entitlement-asset-restriction {
    description "Restriction for an asset";
  }


  augment "/nwi:network-inventory/nwi:network-elements/nwi:network-e\
\lement" {
    description
      "Aguments a component with entitlement information";
    container entitlement-information {
      description
        "Containing holding information about entitlements and the
         features/capabilities they grant";
      container entitlements {
        description
          "List of entitlements installed in the asset";
        list entitlment {
          description
            "Entitlement installed in the asset.";
          key "entitlement-id";
          leaf entitlement-id {
            type leafref {
              path "/network-inventory-entitlements/entitlements/ent\
\itlement/uid";
            }
          }

            leaf component-id {
              description "If the entitlement is specificly for a  c\
\omponent of the 
              network-element, specify it";
              type leafref {
                path "../../../../nwi:components/nwi:component/nwi:c\
\omponent-id";
              }
            }
        }
      }
      container feature-information {
        list feature-use {
          key "feature-class feature-id";
          description "Contains information of the use of a feature \
\within an asset";
          leaf feature-class {
            type leafref {
              path "/network-inventory-entitlements/features/entitle\
\ment-feature-class/entitlement-feature-class";
            }
            description
              "Class of feature to enable";
          }
          leaf feature-id {
            type leafref {
              path "/network-inventory-entitlements/features/entitle\
\ment-feature-class[entitlement-feature-class="
                 + "current()/../feature-class]/feature/feature-id";
            }
            description
              "Feature that this entitlement enables on the asset";
          }

            leaf component-id {
              description "If the restriction is for a specific comp\
\onent of the 
              network-element, specify it";
              type leafref {
                path "../../../../nwi:components/nwi:component/nwi:c\
\omponent-id";
              }
            }

          container supporting-entitlements {
            description
              "An optional list of entitlements allowing the use of \
\the feature";
            list entitlement {
              key "entitlement-id";
              description
                "Subfeature ID";
              leaf entitlement-id {
                type leafref {
                  path "../../../../../entitlements/entitlment/entit\
\lement-id";
                }
                description
                  "Reference to almo-class";
              }
            }
          }
          leaf allowed {
            type boolean;
            description
              "Whther the level of usage of the feature will leave it
               to infrigement if the entilement in entitlements is r\
\emoved";
          }
          leaf in-use {
            type boolean;
            description
              "Optional argument.Whether the feature use is infrigin\
\g its entilement level.
               It means the feature is in use iwthout an entitlement\
\, or going over a level.
               It should explicitly be set if the asset can report. \
\not reporting this 
               value means its value is not determined by the asset";
          }
        }
      }

      container asset-restrictions {
        list asset-restriction-class {
          key "asset-restriction-class";
          leaf  asset-restriction-class {
            type identityref {
              base entitlement-asset-restriction;
            }
            must "derived-from-or-self(current(), "
               + " 'entitlement-asset-restriction')";
          }

          list asset-restriction {
            key "asset-restriction-id";

            leaf component-id {
              description "If the feature is applied to a specific c\
\omponent of the 
              network-element, specify it";
              type leafref {
                path "../../../../../nwi:components/nwi:component/nw\
\i:component-id";
              }
            }

            leaf asset-restriction-id {
              type string;
              description "Restriction id. It can be meaningless";
            }

            leaf description {
              type string;
              description "A description of the restriction. It shou\
\ld quickly communicate what's being restricted in the asset.";
            }

          }


        }
      }

    }
  }

  identity entitlement-asset-restriction-basic {
    description "Restriction for an asset based on a feature";
    base entitlement-asset-restriction;
  }

  augment "/nwi:network-inventory/nwi:network-elements/nwi:network-e\
\lement/"
        + "entitlement-information/asset-restrictions/asset-restrict\
\ion-class/asset-restriction" {
    when "derived-from-or-self(../asset-restriction-class, "
       + " 'entitlement-asset-restriction-basic')";

      leaf resource-name {
        type string;
      }

      leaf units {
        type string;
      }

      leaf max-value {
        type int32;
      }

      leaf current-value {
        type int32;
      }

    }

  identity entitlement-asset-restriction-feature {
    description "Restriction for an asset based on a feature";
    base entitlement-asset-restriction-basic;
  }

  augment "/nwi:network-inventory/nwi:network-elements/nwi:network-e\
\lement/"
        + "entitlement-information/asset-restrictions/asset-restrict\
\ion-class/asset-restriction" {
    when "derived-from-or-self(../asset-restriction-class, "
       + " 'entitlement-asset-restriction-feature')";

      leaf feature-class {
        type leafref {
          path "../../../../feature-information/feature-use/feature-\
\class";
        }
        description
          "Class of feature to enable";
      }
      leaf feature-id {
        type leafref {
          path "../../../../feature-information/feature-use[feature-\
\class="
          + "current()/../feature-class]/feature-id";
        }
        description
          "Feature that this entitlement enables on the asset";
      }

    }

}
]]></sourcecode></figure>

</section>
<section anchor="use-cases"><name>Use cases</name>

<t>In this section we will describe use cases, an example of how they could be modelled by the model, and show how each of the questions that we have explored in this draft can be answered by the model.</t>

<t>TODO in next versions.</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">




<reference anchor="I-D.draft-ietf-ivy-network-inventory-yang-03">
   <front>
      <title>A YANG Data Model for Network Inventory</title>
      <author fullname="Chaode Yu" initials="C." surname="Yu">
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname="Sergio Belotti" initials="S." surname="Belotti">
         <organization>Nokia</organization>
      </author>
      <author fullname="Jean-Francois Bouquier" initials="J." surname="Bouquier">
         <organization>Vodafone</organization>
      </author>
      <author fullname="Fabio Peruzzini" initials="F." surname="Peruzzini">
         <organization>TIM</organization>
      </author>
      <author fullname="Phil Bedard" initials="P." surname="Bedard">
         <organization>Cisco</organization>
      </author>
      <date day="7" month="July" year="2024"/>
      <abstract>
	 <t>   This document defines a base YANG data model for network inventory
   that is application- and technology-agnostic.  This data model can be
   augmented with application-specific and technology-specific details
   in other, more specific network inventory data models.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-ivy-network-inventory-yang-03"/>
   
</reference>




    </references>

</references>



  </back>

<!-- ##markdown-source:
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
UoHVSP4/ZND/6YrAAAA=

-->

</rfc>

