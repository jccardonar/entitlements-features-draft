<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-mcd-ivy-entitlements-inventory-00" category="info" submissionType="IETF" xml:lang="en">
  <front>
    <title abbrev="entitlement inventory">A YANG module for entitlement inventory</title>

    <author initials="M." surname="Palmero" fullname="Marisol Palmero" role="editor">
      <organization>Cisco Systems</organization>
      <address>
        <email>mpalmero@cisco.com</email>
      </address>
    </author>
    <author initials="C." surname="Cardona" fullname="Camilo Cardona" role="editor">
      <organization>NTT</organization>
      <address>
        <email>camilo@gin.ntt.net</email>
      </address>
    </author>
    <author initials="D." surname="Lopez" fullname="Diego Lopez" role="editor">
      <organization>Telefonica I+D</organization>
      <address>
        <email>diego.r.lopez@telefonica.com</email>
      </address>
    </author>

    <date year="2024" month="October" day="22"/>

    <area>OPS</area>
    <workgroup>IVY</workgroup>
    <keyword>entitlement</keyword> <keyword>inventory</keyword> <keyword>assets</keyword> <keyword>features</keyword>

    <abstract>


<?line 36?>
<t>This document proposes a YANG module with an inventory of entitlements. The model helps manage details about entitlements, such as  their scope, how they are assigned, and when they expire. The model introduces the a descriptive definition of features and use restriction that can help a entitlement admistration an understanding of the state of their assets and the capabilities available across the network.</t>



    </abstract>



  </front>

  <middle>


<?line 38?>

<section anchor="introduction"><name>Introduction</name>

<t>An entitlement grants specific holders the right to access particular features of one or more assets. The use of these features may be restricted in various ways, such as by duration, usage limits, or predefined conditions. Having information a centralizaed point with the state of the entitlements of the network can save time and facilitate decision making. In this document, we propose a yang model that, complementing the network inventory module, can provide the information the asset/entitlement adminstrator needs for this.</t>

<section anchor="glosary"><name>Glosary</name>

<t>TODO. We need the distinction between licenses and entitlements.</t>

</section>
<section anchor="requirements-language"><name>Requirements language</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.
<?line -6?></t>

</section>
<section anchor="QUESTIONS"><name>Scope of the entitlement model</name>

<t>The entitlement model aims to provide an inventory of entitlements. This includes the entitled holders and the features to which they are entitled. Additionally, it offers  information into the restrictions of the operation of the different assets (network entities and components).</t>

<t>In general, this model seeks to address the following questions:</t>

<t><list style="symbols">
  <t>What entitlements are administered/owned by the organization?</t>
  <t>How are entitlements restricted to some assets and holders?</t>
  <t>What entitlements are assigned or installed on each assets?</t>
  <t>What constraints do the current entitlements impose in the assets functionality?</t>
  <t>Does the entitlement imposses any kind of global restrictions? What are they?</t>
  <t>What are the restrictions that each asset due to the entitlements it holds?</t>
</list></t>

<t>These points will be elaborated further in section <xref target="ENTMODEL"/>. Initially, we will delineate some aspects not covered by this model, followed by an explanation of features.</t>

<t>The model is designed with flexibility in mind, allowing for expansion through the utilization of tools provided by YANG.</t>

</section>
<section anchor="out-of-scope-elmements-of-the-dlmo-entitlement-model"><name>Out of scope elmements of the DLMO entitlement model</name>

<t>The realm of entitlements or licenses is inherently complex, presenting challenges in creating a model that can comprehensively encompass all scenarios without ambiguity. While we attempt to address various situations through examples and use cases, we  acknowledge that the model might not be able to cover all corner cases without ambiguity. In such cases, we recommend that implementations provide additional documentation to clarify potential ambiguities.</t>

<t>The current model does not aim to serve as a catalog of licenses. While it may accommodate basic scenarios, it does not aim to cover the full spectrum of license characteristics, which can vary significantly. Instead, our focus is on providing a general framework for describing relationships and answering the questions we expose in section <xref target="QUESTIONS"/>.</t>

<t>To clarify, here are some questions that our model does not attempt to answer:</t>

<t><list style="symbols">
  <t>What are the implications of purchasing a specific entitlement?</t>
  <t>Which entitlement should I acquire to get a specific feature?</t>
  <t>Is license migration feasible?</t>
  <t>What features will be allowed if I install an entitlement in specific device?</t>
  <t>Features or restrictions that depend on each user. We are not covering this in the current version of this document, but it could be done if we expand the holders indentification.</t>
</list></t>

<t>We emphasize that the model primarily addresses the commercial utilization of features, rather than access control. For instance, if a network device cannot be configured an arbitrary network protocol (e.g. MPLS) due to licensing restrictions, this implies that the organization owning the router (the holder  in this scenario) is not permitted to utilize the MPLS feature. This distinction is separate from, for instance, the ability of an user to configure MPLS due to access control limitations.</t>

</section>
<section anchor="features-or-maybe-capabilities"><name>Features (or maybe capabilities?)</name>

<t>Entitlements entitle a holder to use a feature of an asset. In some cases, this feature can be simply the use of the asset itself (e.g., the use of software, the use of network equipment). However, in common cases, assets can offer a rich array of features that are subject to entitlement levels.</t>

<t>Under the entitlement  model, we do not attempt to model features exhaustively. Instead, we provide a descriptive definition of features, which falls under the responsibility of the model's implementers. Also, the main philosofy behind the model is to only list those features that are allowed/restricted based on the entitlements that the organization coutns with. The features under the entitlmeents model are not there to list all features available by an asset, but only those that depend on the entitlmeent state of the asset.</t>

<t>We'll provide examples of feature definitions in our use cases.</t>

</section>
</section>
<section anchor="ENTMODEL"><name>Entitlements Modeling</name>

<t>The model aims to provide a framework for addressing the questions outlined in Section <xref target="QUESTIONS"/> across various use cases. In this section, we delve deeper into these questions, offering examples to demonstrate why some are more complex than initially perceived.</t>

<t>The entitlement model is included in Secion <xref target="MODEL"/>. We will describe how each of the questions in Section <xref target="QUESTIONS"/> are responded by the model. First, we will introduce  a toy example to show how each question can be answered.</t>

<section anchor="toy-example-for-entitlement-model"><name>Toy example for entitlement model</name>

<t>As a toy example for the model we'll use the next scenario: Two network elements (routers), each with a line card, and a port.  Both routers are of the same type (generic_router), which requires an entitlement to operate. The router entitlement is issued for each device specifically. The line card also requires a license to operate, and an extra license to allow for more than 100Gbps per port and breakout functionality, but they are not issued for each router.  Both routers have the generic and the line card license, but one is missing the port license, therefore the ports are limited.</t>

<t>The resulting json with these scenario is attached next:</t>

<figure title="Toy scenario for entitlement model description" anchor="toyexample"><sourcecode type="json"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "ietf-network-inventory-entitlements:network-inventory-entitlement\
s": {
    "features": {
      "entitlement-feature-class": [
        {
          "entitlement-feature-class": "basic-feature",
          "feature": [
            {
              "feature-id": "acme_router_generic_operation"
            },
            {
              "feature-id": "acme_line_card_generic_operation"
            },
            {
              "feature-id": "acme_port_400gbps_breakpout"
            }
          ]
        }
      ]
    },
    "entitlements": {
      "entitlement": [
        {
          "uid": "ff31c766-1ed1-59f7-a043-030de623f1a7",
          "state": "active",
          "product-id": "acme_router_generic_operation",
          "entitlement-attachements": {
            "holders": {
              "organizations_names": {
                "organizations": [
                  "main_organization"
                ]
              }
            },
            "assets": {
              "network-inventory": {
                "network-elements": [
                  "router_one"
                ]
              }
            }
          }
        },
        {
          "uid": "f68600ee-aaa8-55ea-be3b-d7e66c9734b1",
          "state": "active",
          "product-id": "general_component_license_operation",
          "entitlement-attachements": {
            "holders": {
              "organizations_names": {
                "organizations": [
                  "main_organization"
                ]
              }
            }
          }
        },
        {
          "uid": "fb8a776a-0c8e-553a-a5cc-bf97e1a949b5",
          "state": "active",
          "product-id": "line_card_full_port_license",
          "restrictions": {
            "entitlment-restriction-class": [
              {
                "entitlement-restriction-class": "entitlement-global\
-restriction-generic",
                "restriction": [
                  {
                    "description": "Number of times the license has \
been use in assets",
                    "units": "number_of_installed_licenses",
                    "max-value": 5,
                    "current-value": 1,
                    "restriction-id": "restriction_0"
                  }
                ]
              }
            ]
          },
          "entitlement-attachements": {
            "holders": {
              "organizations_names": {
                "organizations": [
                  "main_organization"
                ]
              }
            }
          }
        }
      ]
    }
  },
  "ietf-network-inventory:network-inventory": {
    "network-elements": {
      "network-element": [
        {
          "ne-id": "router_one",
          "components": {
            "component": [
              {
                "component-id": "acme_router_one_line_card",
                "class": "iana-hardware:module"
              },
              {
                "component-id": "acme_router_one_port_400gbps",
                "class": "iana-hardware:module"
              }
            ]
          },
          "ietf-network-inventory-entitlements:entitlement-informati\
on": {
            "entitlements": {
              "entitlment": [
                {
                  "entitlement-id": "ff31c766-1ed1-59f7-a043-030de62\
3f1a7"
                },
                {
                  "entitlement-id": "f68600ee-aaa8-55ea-be3b-d7e66c9\
734b1",
                  "component-id": "acme_router_one_line_card"
                },
                {
                  "entitlement-id": "fb8a776a-0c8e-553a-a5cc-bf97e1a\
949b5",
                  "component-id": "acme_router_one_line_card"
                }
              ]
            },
            "feature-information": {
              "feature-use": [
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_router_generic_operation",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "ff31c766-1ed1-59f7-a043-0\
30de623f1a7"
                      }
                    ]
                  }
                },
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_line_card_generic_operation",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "f68600ee-aaa8-55ea-be3b-d\
7e66c9734b1"
                      }
                    ]
                  },
                  "component-id": "acme_router_one_line_card"
                },
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_port_400gbps_breakpout",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "fb8a776a-0c8e-553a-a5cc-b\
f97e1a949b5"
                      }
                    ]
                  },
                  "component-id": "acme_router_one_port_400gbps"
                }
              ]
            }
          }
        },
        {
          "ne-id": "router_two",
          "components": {
            "component": [
              {
                "component-id": "acme_router_two_line_card",
                "class": "iana-hardware:module"
              },
              {
                "component-id": "acme_router_two_port_400gbps",
                "class": "iana-hardware:module"
              }
            ]
          },
          "ietf-network-inventory-entitlements:entitlement-informati\
on": {
            "entitlements": {
              "entitlment": [
                {
                  "entitlement-id": "ff31c766-1ed1-59f7-a043-030de62\
3f1a7"
                },
                {
                  "entitlement-id": "f68600ee-aaa8-55ea-be3b-d7e66c9\
734b1",
                  "component-id": "acme_router_two_line_card"
                }
              ]
            },
            "feature-information": {
              "feature-use": [
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_router_generic_operation",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "ff31c766-1ed1-59f7-a043-0\
30de623f1a7"
                      }
                    ]
                  }
                },
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_line_card_generic_operation",
                  "in-use": true,
                  "allowed": true,
                  "supporting-entitlements": {
                    "entitlement": [
                      {
                        "entitlement-id": "f68600ee-aaa8-55ea-be3b-d\
7e66c9734b1"
                      }
                    ]
                  },
                  "component-id": "acme_router_two_line_card"
                },
                {
                  "feature-class": "basic-feature",
                  "feature-id": "acme_port_400gbps_breakpout",
                  "in-use": false,
                  "allowed": false,
                  "supporting-entitlements": {
                    "entitlement": []
                  },
                  "component-id": "acme_router_two_port_400gbps"
                }
              ]
            },
            "asset-restrictions": {
              "asset-restriction-class": [
                {
                  "asset-restriction-class": "entitlement-asset-rest\
riction-basic",
                  "asset-restriction": [
                    {
                      "description": "Bandwidth limit",
                      "units": "Gbps",
                      "max-value": 100,
                      "current-value": 79,
                      "component-id": "acme_router_two_port_400gbps",
                      "asset-restriction-id": "restriction_0"
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="what-entitlements-are-administeredowned-by-the-organization-entitlements-inventory"><name>What entitlements are administered/owned by the organization (entitlement's inventory)?</name>

<t>The model should facilitate listing all entitlements associated with a set of assets under the same asset administration. In scenarios where entitlements are tied to assets, the asset itself could provide this information. Alternatively, providers may support something similar to a license server, which could house comprehensive information regarding an organization's licenses.</t>

<t>Within the model, all entitlements and features are listed directly under the network-inventory-entitlements container of the model.</t>

<t>Just by listing the entitlements, and provide their basic information, a netconf client will be able to retrieve basic inventory information of existing entitlements, without processing the more complex relationships that we will describe in the next sections.</t>

<t>Note that the model uses lists based on classes on multiple parts to be able to extend functionality. We will provide examples of how this can be done in posterior releases of this document.</t>

<t>The entitlements and features list do not specify which the assets (network elments or components) are actually assigned the entitlements, either through an installation  or a similar operation. For this, we augment the network elements form the network-inventory <xref target="I-D.draft-ietf-ivy-network-inventory-yang-03"/> model with a new container called entitlement-information. This container  hold information of the state of entitlmenets in the asset.</t>

<t>The entiltment container holds a container called entitlement-attachements which relates  how the entitlement is COMMERCIALLY linked to holders or assets. Note that there is a difference between an entilement being attached to an asset and an entilement being installed in the asset. In the former, we mean that the license was issued only for one (or more) assets.  Some licenses actually can be open but have a limited number of installation, just as we have in our toy example. Other licenses might be openly contraint to geography localtion. We are not deailing with these complex cases now, but the container can be expanded for this in the future.</t>

<t>In our toy example, we can extract the information in a single table. We show the summary in the next figure.</t>

<figure title="Entitlement report for toy case" anchor="entitlmenet_report"><artwork><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

Entry 0:
  name: ent_acme_router_generic_operation_one
  product_id: acme_router_generic_operation
  state: active
  attached_assets: router_one
  assets_where_is_installed: router_one,router_two
  restrictions_apply: False

Entry 1:
  name: ent_acme_line_card_generic_operation
  product_id: general_component_license_operation
  state: active
  attached_assets: 
  assets_where_is_installed: router_one-acme_router_one_line_card,ro\
uter_two-
    acme_router_two_line_card
  restrictions_apply: False

Entry 2:
  name: ent_acme_line_card_full_ports
  product_id: line_card_full_port_license
  state: active
  attached_assets: 
  assets_where_is_installed: router_one-acme_router_one_line_card
  restrictions_apply: True
]]></artwork></figure>

<t>Entitlements might be listed by multiple assets. For instance, a license server, functioning as an asset, might list an entitlement, while the asset entitled by the license might also list it. Proper identification of entitlements is imperative to ensure consistency across systems, enabling monitoring systems to recognize when multiple assets list the same entitlement.</t>

<t>Furthermore, there are cases where an authorized asset might not be aware of the covering license. Consider the scenario of a site license, wherein any device under the site may utilize a feature without explicit knowledge of the covering license. In such cases, asset awareness relies on management controls or a service license capable of listing it.</t>

<t>The model accommodates listing entitlements acquired by the organization but not yet applied or utilized by any actor/asset. For these "pending" entitlements, logistical constraints may arise in informing their existence, as there must be at least one element exporting the model that is aware of their existence.</t>

<t>Some entitlements are inherently associated with an holder, such as organization or an user. For example, a software license might be directly attached to a user. Also, the use of a network device might come with a basic license provided solely to an organization. Some entitlements could be assigned to a more abstract description of holders, such as people under a juristiction a geographical area. The model contains basic information about this, but it can be extended in the future to be more descriptive.</t>

</section>
<section anchor="what-is-the-link-between-a-entitlement-and-assets"><name>What is the link between a entitlement and assets?</name>

<t>Entitlements and assets are linked in the model in two ways. Entitlemenets might be "attached" to assets, and assets include (or have installed) entitlements. The former is included under the network-inventory-entitlements list container, while the former is included as an augmenetation in the network element.</t>

<t>When an asset lists an entitlement, it means that the entitlement is installed in the asset. An entitlement that is not listed by any asset means that is not being used (even if it is attached to an asset, as we will see later).</t>

<t>Attaching an entitlement to one or multiple asset means that the entitlement is exclusively used by that asset. However, this is not mandatory and there are many licenses that are open and can be installed at any asset of certain type.</t>

<t>While attachment is optional, the model should be capable of expressing attachment in various scenarios. The model can be expanded to list to which assets an entitlement is aimed for, when this link is more vague, such as a site license (e.g., assets located in a specific site), or more open licenses (e.g., free software for all users subscribed to a streaming platform).</t>

<t>It's important to note that the current model does not provide information on whether an entitlement can be reassigned to other devices (e.g., fixed or floating license). Such scenarios fall under the "what if" category, which is not covered by this model.</t>

<t>The list of attached assets, and the assets where the entitlements are installed is included already in the figure <xref target="entitlmenet_report"/>.</t>

</section>
<section anchor="what-constraints-do-assets-under-the-current-entitlements-impose-on-the-actors-use-of-the-assets-features"><name>What constraints do assets, under the current entitlements, impose on the actors' use of the asset's features?</name>

<t>Assets provide various features, which may be restricted based on the availability of proper entitlements. A entitlement manager might be interested in the features that are not available to use on the assets, and the features that are available.</t>

<t>The model includes this information on the entitlement-information/feature-information/feature-use which is the entitlement-model adds to the network-elements from the network inventory model..</t>

<t>An entitlement  grants permission to access specific features associated with an asset. However, in some cases, there are limitations or restrictions on the use of these features. it's essential for the model to provide information on the status of the entitlement, particularly if it is at risk of being infringed upon. This can help organizations stay informed about their entitlement usage and take necessary actions to prevent potential violations or overuse of features.</t>

<t>All the information related to how an asset provides a feature to actors is included under the feature container wihtin the asset class, under the entitlements-info container.</t>

<figure title="Features report for toy case" anchor="feature_report"><artwork><![CDATA[
Entry 0:
  feature_name: acme_line_card_generic_operation
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_line_card_generic_operation
  restrictions_apply: False
  asset: router_one-acme_router_one_line_card

Entry 1:
  feature_name: acme_line_card_generic_operation
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_line_card_generic_operation
  restrictions_apply: False
  asset: router_two-acme_router_two_line_card

Entry 2:
  feature_name: acme_port_400gbps_breakpout
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_line_card_full_ports
  restrictions_apply: False
  asset: router_one-acme_router_one_port_400gbps

Entry 3:
  feature_name: acme_port_400gbps_breakpout
  allowed: False
  in_use: False
  supporting_entitlements: 
  restrictions_apply: False
  asset: router_two-acme_router_two_port_400gbps

Entry 4:
  feature_name: acme_router_generic_operation
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_router_generic_operation_one
  restrictions_apply: False
  asset: router_one

Entry 5:
  feature_name: acme_router_generic_operation
  allowed: True
  in_use: True
  supporting_entitlements: ent_acme_router_generic_operation_one
  restrictions_apply: False
  asset: router_two
]]></artwork></figure>

</section>
<section anchor="how-are-entitlements-utilized-which-actors-are-using-features-backed-by-entilements-and-in-cases-where-the-entitlements-provide-limits-how-close-the-use-of-those-features-is-to-those-limits"><name>How are entitlements utilized? Which actors are using features backed by entilements? And in cases where the entitlements provide limits, how close the use of those features is to those limits.</name>

<figure title="Restrictions  report for toy case" anchor="asset_restrictions"><artwork><![CDATA[
Entry 0:
  description: Bandwidth limit
  units: Gbps
  max-value: 100
  current-value: 79
  asset: router_two-acme_router_two_port_400gbps
]]></artwork></figure>

</section>
</section>
<section anchor="MODEL"><name>Entitlements model</name>

<t>Here is the tree for the entitlement model.</t>

<figure title="Tree of entitlement model" anchor="tree"><artwork><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

module: ietf-network-inventory
  +--rw network-inventory
     +--rw network-elements
        +--rw network-element* [ne-id]
           +--rw ne-id                           string
           +--ro ne-type?                        identityref
           +--ro uuid?                           yang:uuid
           +--rw name?                           string
           +--rw description?                    string
           +--rw alias?                          string
           +--ro hardware-rev?                   string
           +--ro software-rev?                   string
           +--ro software-patch-rev*             string
           +--ro mfg-name?                       string
           +--ro mfg-date?                       yang:date-and-time
           +--ro serial-number?                  string
           +--ro product-name?                   string
           +--rw components
           |  +--rw component* [component-id]
           |     +--rw component-id             string
           |     +--ro class                    union
           |     +--ro uuid?                    yang:uuid
           |     +--rw name?                    string
           |     +--rw description?             string
           |     +--rw alias?                   string
           |     +--ro child-component-ref
           |     +--ro parent-rel-pos?          int32
           |     +--ro parent-component-ref
           |     +--ro hardware-rev?            string
           |     +--ro firmware-rev?            string
           |     +--ro software-rev?            string
           |     +--ro software-patch-rev*      string
           |     +--ro serial-num?              string
           |     +--ro mfg-name?                string
           |     +--ro part-number?             string
           |     +--ro product-name?            string
           |     +--ro asset-id?                string
           |     +--ro is-fru?                  boolean
           |     +--ro mfg-date?                yang:date-and-time
           |     +--ro uri*                     inet:uri
           |     +--ro chassis-specific-info
           |     +--ro slot-specific-info
           |     +--ro board-specific-info
           |     +--ro port-specific-info
           +--rw nwie:entitlement-information
              +--rw nwie:entitlements
              |  +--rw nwie:entitlment* [entitlement-id]
              |     +--rw nwie:entitlement-id    -> /network-invento\
ry-entitlements/entitlements/entitlement/uid
              |     +--rw nwie:component-id?     -> ../../../../nwi:\
components/nwi:component/nwi:component-id
              +--rw nwie:feature-information
              |  +--rw nwie:feature-use* [feature-class feature-id]
              |     +--rw nwie:feature-class              -> /networ\
k-inventory-entitlements/features/entitlement-feature-class/entitlem\
ent-feature-class
              |     +--rw nwie:feature-id                 -> /networ\
k-inventory-entitlements/features/entitlement-feature-class[entitlem\
ent-feature-class=current()/../feature-class]/feature/feature-id
              |     +--rw nwie:component-id?              -> ../../.\
./../nwi:components/nwi:component/nwi:component-id
              |     +--rw nwie:supporting-entitlements
              |     |  +--rw nwie:entitlement* [entitlement-id]
              |     |     +--rw nwie:entitlement-id    -> ../../../.\
./../entitlements/entitlment/entitlement-id
              |     +--rw nwie:allowed?                   boolean
              |     +--rw nwie:in-use?                    boolean
              +--rw nwie:asset-restrictions
                 +--rw nwie:asset-restriction-class* [asset-restrict\
ion-class]
                    +--rw nwie:asset-restriction-class    identityref
                    +--rw nwie:asset-restriction* [asset-restriction\
-id]
                       +--rw nwie:asset-restriction-id    string
                       +--rw nwie:component-id?           -> ../../.\
./../../nwi:components/nwi:component/nwi:component-id
                       +--rw nwie:description?            string
                       +--rw nwie:resource-name?          string
                       +--rw nwie:units?                  string
                       +--rw nwie:max-value?              int32
                       +--rw nwie:current-value?          int32
                       +--rw nwie:feature-class?          -> ../../.\
./../feature-information/feature-use/feature-class
                       +--rw nwie:feature-id?             -> ../../.\
./../feature-information/feature-use[feature-class=current()/../feat\
ure-class]/feature-id

module: iana-hardware

module: ietf-network-inventory-entitlements-features
  +--rw network-inventory-entitlements
     +--rw features
     |  +--rw entitlement-feature-class* [entitlement-feature-class]
     |     +--rw entitlement-feature-class    identityref
     |     +--rw feature* [feature-id]
     |        +--rw feature-id                      string
     |        +--rw extended-feature-description?   string
     +--rw entitlements
        +--rw entitlement* [uid]
           +--rw uid                         string
           +--rw product-id?                 string
           +--rw state?                      entitlement-state-t
           +--rw renewal-profile
           |  +--rw activation-date?   yang:date-and-time
           |  +--rw expiration-date?   yang:date-and-time
           +--rw restrictions
           |  +--rw entitlment-restriction-class* [entitlement-restr\
iction-class]
           |     +--rw entitlement-restriction-class    identityref
           |     +--rw restriction* [restriction-id]
           |        +--rw restriction-id    string
           |        +--rw description?      string
           |        +--rw units?            string
           |        +--rw max-value?        int32
           |        +--rw current-value?    int32
           +--rw capabilities
           |  +--rw capability-class* [capability-class]
           |     +--rw capability-class    identityref
           |     +--rw capability* [capability-id]
           |        +--rw capability-id           string
           |        +--rw feature-class?          -> /network-invent\
ory-entitlements/features/entitlement-feature-class/entitlement-feat\
ure-class
           |        +--rw feature-id?             -> /network-invent\
ory-entitlements/features/entitlement-feature-class[entitlement-feat\
ure-class=current()/../feature-class]/feature/feature-id
           |        +--rw resource-description?   string
           |        +--rw resource-units?         string
           |        +--rw resource-amount?        int32
           +--rw parent-entitlement-uid?     -> ../../entitlement/uid
           +--rw entitlement-attachements
              +--rw universal-access?   boolean
              +--rw holders!
              |  +--rw organizations_names
              |  |  +--rw organizations*   string
              |  +--rw users_names
              |     +--rw users*   string
              +--rw assets
                 +--rw network-inventory
                    +--rw network-elements*   string
                    +--rw components
                       +--rw component* [network-element component-i\
d]
                          +--rw network-element    string
                          +--rw component-id       string

  augment /nwi:network-inventory/nwi:network-elements/nwi:network-el\
ement:
    +--rw entitlement-information
       +--rw entitlements
       |  +--rw entitlment* [entitlement-id]
       |     +--rw entitlement-id    -> /network-inventory-entitleme\
nts/entitlements/entitlement/uid
       |     +--rw component-id?     -> ../../../../nwi:components/n\
wi:component/nwi:component-id
       +--rw feature-information
       |  +--rw feature-use* [feature-class feature-id]
       |     +--rw feature-class              -> /network-inventory-\
entitlements/features/entitlement-feature-class/entitlement-feature-\
class
       |     +--rw feature-id                 -> /network-inventory-\
entitlements/features/entitlement-feature-class[entitlement-feature-\
class=current()/../feature-class]/feature/feature-id
       |     +--rw component-id?              -> ../../../../nwi:com\
ponents/nwi:component/nwi:component-id
       |     +--rw supporting-entitlements
       |     |  +--rw entitlement* [entitlement-id]
       |     |     +--rw entitlement-id    -> ../../../../../entitle\
ments/entitlment/entitlement-id
       |     +--rw allowed?                   boolean
       |     +--rw in-use?                    boolean
       +--rw asset-restrictions
          +--rw asset-restriction-class* [asset-restriction-class]
             +--rw asset-restriction-class    identityref
             +--rw asset-restriction* [asset-restriction-id]
                +--rw component-id?           -> ../../../../../nwi:\
components/nwi:component/nwi:component-id
                +--rw asset-restriction-id    string
                +--rw description?            string
  augment /nwi:network-inventory/nwi:network-elements/nwi:network-el\
ement/entitlement-information/asset-restrictions/asset-restriction-c\
lass/asset-restriction:
    +--rw resource-name?   string
    +--rw units?           string
    +--rw max-value?       int32
    +--rw current-value?   int32
  augment /nwi:network-inventory/nwi:network-elements/nwi:network-el\
ement/entitlement-information/asset-restrictions/asset-restriction-c\
lass/asset-restriction:
    +--rw feature-class?   -> ../../../../feature-information/featur\
e-use/feature-class
    +--rw feature-id?      -> ../../../../feature-information/featur\
e-use[feature-class=current()/../feature-class]/feature-id
]]></artwork></figure>

<t>The full entitlement model comes in the next figure.</t>

<figure title="Complete entitlement model" anchor="full_model"><sourcecode type="yang"><![CDATA[
=============== NOTE: '\\' line wrapping per RFC 8792 ===============

module ietf-network-inventory-entitlements-features {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-inventory-enti\
\tlements-features";
  prefix nwie;

  import ietf-yang-types {
    prefix yang;
  }
  import ietf-network-inventory {
    prefix nwi;
    reference
      "RFCxxxx: IETF Network Inventory";
  }

  organization
    "IETF IVY Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ivy/>
     WG List:  <mailto:inventory-yang@ietf.org>

     Editor:   Marisol Palmero
               <a>

     Editor:   Camilo Cardona
               <>

     Editor:   Diego
               <>";
  description
    "This module defines a base model for retrieving network
     inventory.

     The model fully conforms to the Network Management
     Datastore Architecture (NMDA).

     Copyright (c) 2024 IETF Trust and the persons
     identified as authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.

  revision 2024-04-09 {
    description
      "Initial version";
    reference
      "RFC XXXX:.";
  }

  identity entitlement-capability-description {
    description
      "Base identity for classes of LMO. Provides just an id, and a";
  }

  identity entitlement-global-restriction {
    description
      "Base identify for restriction. It does not provide anything m\
\eaninful.";
  }

  identity entitlement-feature {
    description
      "Base identity for classes of LMO. Provides just an id, and a
       extended description";
  }

  identity basic-feature {
    base entitlement-feature;
    description
      "Base identity for classes of LMO. Provides just an id, and a
       extended description";
  }

  typedef entitlement-state-t {
    type enumeration {
      enum inactive {
        description
          "Inactive State";
      }
      enum active {
        description
          "Active State";
      }
      enum unknown {
        description
          "Unknown State";
      }
    }
    description
      "Entitlement State Type";
  }

  identity test {
    base nwi:non-hardware-component-class;
  }

  container network-inventory-entitlements {
    container features {
      list entitlement-feature-class {
        description
          "Optional list of features known by this data server. ";
        key "entitlement-feature-class";
        leaf entitlement-feature-class {
          type identityref {
            base entitlement-feature;
          }
          must "derived-from-or-self(current(), "
             + " 'entitlement-feature')";
        }
        list feature {
          key "feature-id";
          leaf feature-id {
            type string;
            description
              "Feature ID.";
          }
          leaf extended-feature-description {
            type string;
            description
              "Extended feature description of the feature, if neede\
\d";
          }
        }
      }
    }
    container entitlements {
      list entitlement {
        key "uid";
        description
          "The container includes attributes for entitlements";
        leaf uid {
          type string;
          description
            "Unique Entitlement Identifier";
        }
        leaf product-id {
          type string;
          description
            "An optional product id for the entitlemnet, if one exis\
\ts";
        }
        leaf state {
          type entitlement-state-t;
          description
            "Entitlement state; e.g., active, inactive, or unknown";
        }
        container renewal-profile {
          description
            "Profile of entitlement renewal status and information";
          leaf activation-date {
            type yang:date-and-time;
            description
              "Activation Date";
          }
          leaf expiration-date {
            type yang:date-and-time;
            description
              "Expiration Date";
          }
        }
        container restrictions {
          description
            "Global entitlement usage restrictions";
          list entitlment-restriction-class {
            key "entitlement-restriction-class";
            leaf entitlement-restriction-class {
              type identityref {
                base entitlement-global-restriction;
              }
              must "derived-from-or-self(current(), "
                 + " 'entitlement-global-restriction')";
            }
            list restriction {
              key "restriction-id";
              leaf restriction-id {
                description
                  "A string that uniquelly identifies the restrictio\
\ns. It might not be meaninfully.";
                type string;
              }
            }
          }
        }
        // TODO:  We could have a list of features the entitlement c\
\overs, but this would be 
        // only for description purposes since an entitlement is onl\
\y meaningful when 
        // allowing a feature under an asset
        container capabilities {
          description
            "Descriptive list of features the entitlement grants";
          list capability-class {
            key "capability-class";
            leaf capability-class {
              type identityref {
                base entitlement-capability-description;
              }
              must "derived-from-or-self(current(), "
                 + " 'entitlement-capability-description')";
              description
                "Feature type";
            }
            list capability {
              key "capability-id";
              leaf capability-id {
                description
                  "A string that uniquelly identifies the restrictio\
\ns. It might not be meaninfully.";
                type string;
              }
            }
          }
        }

      leaf parent-entitlement-uid {
        type leafref {
          path "../../entitlement/uid";
        }
        must '. != current()/../../entitlement/uid' {
          error-message "An entitlement cannot be its own parent.";
        }
        description
          "Some entitlements are delivered in 'packages'. The parent\
\-entitlement relationship aims
           at covering this case. If the package has an id, it can b\
\e modeled as an entitlement
           covering multiple ones. This can also cover the case of a\
\n entilement that can 
           be divided in multiple parts";
      }
      container entitlement-attachements {
        description
          "An entilement entitles an entity to the use of a feature \
\under an
           asset.";

        leaf universal-access {
          type boolean;
          default "false";
          description "Optional flag to signal that the entitlment i\
\s not attached to any holder, that is, the permissions granted are \
\for everybody.";
        }

        container holders {

          presence "The holders container should be created only whe\
\n the data server
          can provide information of the holder of the entitlement.";

          must "not(../universal-access = 'true')" {
            error-message "The 'holders' container cannot exist when\
\ universal-access is set.";
          }

          description
            "The entities to which the entilements grants permissios\
\n to.
             There can be multiple of them. 
             The container SHOULD NOT exist if the data server does \
\not known
             of the holders of the entitlement. An empty holders SHO\
\ULD be avoided, instead
             the universal-access flag should be set.
             It might be expanded to cover selection cases e.g. all \
\users in
             a special country.";

          container organizations_names {
            leaf-list organizations {
              type string;
            }
          }
          container users_names {
            leaf-list users {
              type string;
            }
          }
          // We could expand this to more generic selections of users
          // or organizations, or in general add a flexible way of e\
\xpanding it
          // via keying by a instance
        }
        container assets {
          container network-inventory {
            leaf-list network-elements {
              type string;
            }
            container components {
              list component {
                key "network-element component-id";
                leaf network-element {
                  type string;
                }
                leaf component-id {
                  type string;
                }

              }
            }
          }
          // We could expand this to more generic selections of users
          // or organizations, or in general add a flexible way of e\
\xpanding it
          // via keying by a instance
        }
        // We could have other container with more descriptive set o\
\f assets
        // such as "all laptops in school Y (site license)"

      }
      }
    }
  }

  // Let us define the entitlement capabilities for feature and reso\
\ures
  // An entitlmeent capability will add a feature
  // We leave open many things here, that's why iti s only descripti\
\ve

  identity entitlement-capability-feature-description {
    base entitlement-capability-description;
  }

  augment "/network-inventory-entitlements/entitlements/entitlement/\
\capabilities/capability-class/capability" {
    when "derived-from-or-self(../capability-class, "
       + " 'entitlement-capability-feature-description')";
    leaf feature-class {
      type leafref {
        path "/network-inventory-entitlements/features/entitlement-f\
\eature-class/entitlement-feature-class";
      }
      description
        "Class of feature to enable";
    }
    leaf feature-id {
      type leafref {
        path "/network-inventory-entitlements/features/entitlement-f\
\eature-class[entitlement-feature-class="
           + "current()/../feature-class]/feature/feature-id";
      }
      description
        "Feature that this entitlement enables on the asset";
    }
  }

  // A resource capability will extend the resources of an asset
  // here we dont provide much context, it is just for simple cases

  identity entitlement-capability-resource-description {
    base entitlement-capability-description;
  }

  augment "/network-inventory-entitlements/entitlements/entitlement/\
\capabilities/capability-class/capability" {
    when "derived-from-or-self(../capability-class, "
       + " 'entitlement-capability-resource-description')";
    leaf resource-description {
      type string;
      description
        "Description of the resource capability";
    }
    leaf resource-units {
      type string;
    }
    leaf resource-amount {
      type int32;
    }
  }

  identity entitlement-global-restriction-generic {
    description
      "A generic restriction with a maximum of a resource, and its c\
\urrent value.";
    base entitlement-global-restriction;
  }

  augment "/network-inventory-entitlements/entitlements/entitlement/\
\restrictions/entitlment-restriction-class/restriction" {
    when "derived-from-or-self(../entitlement-restriction-class, "
       + "'entitlement-global-restriction-generic')";
    leaf description {
      type string;
      description
        "Description of the resource capability";
    }
    leaf units {
      type string;
    }
    leaf max-value {
      type int32;
    }
    leaf current-value {
      type int32;
    }
  }

  identity entitlement-asset-restriction {
    description "Restriction for an asset";
  }


  augment "/nwi:network-inventory/nwi:network-elements/nwi:network-e\
\lement" {
    description
      "Aguments a component with entitlement information";
    container entitlement-information {
      description
        "Containing holding information about entitlements and the
         features/capabilities they grant";
      container entitlements {
        description
          "List of entitlements installed in the asset";
        list entitlment {
          description
            "Entitlement installed in the asset.";
          key "entitlement-id";
          leaf entitlement-id {
            type leafref {
              path "/network-inventory-entitlements/entitlements/ent\
\itlement/uid";
            }
          }

            leaf component-id {
              description "If the entitlement is specificly for a  c\
\omponent of the 
              network-element, specify it";
              type leafref {
                path "../../../../nwi:components/nwi:component/nwi:c\
\omponent-id";
              }
            }
        }
      }
      container feature-information {
        list feature-use {
          key "feature-class feature-id";
          description "Contains information of the use of a feature \
\within an asset";
          leaf feature-class {
            type leafref {
              path "/network-inventory-entitlements/features/entitle\
\ment-feature-class/entitlement-feature-class";
            }
            description
              "Class of feature to enable";
          }
          leaf feature-id {
            type leafref {
              path "/network-inventory-entitlements/features/entitle\
\ment-feature-class[entitlement-feature-class="
                 + "current()/../feature-class]/feature/feature-id";
            }
            description
              "Feature that this entitlement enables on the asset";
          }

            leaf component-id {
              description "If the restriction is for a specific comp\
\onent of the 
              network-element, specify it";
              type leafref {
                path "../../../../nwi:components/nwi:component/nwi:c\
\omponent-id";
              }
            }

          container supporting-entitlements {
            description
              "An optional list of entitlements allowing the use of \
\the feature";
            list entitlement {
              key "entitlement-id";
              description
                "Subfeature ID";
              leaf entitlement-id {
                type leafref {
                  path "../../../../../entitlements/entitlment/entit\
\lement-id";
                }
                description
                  "Reference to almo-class";
              }
            }
          }
          leaf allowed {
            type boolean;
            description
              "Whther the level of usage of the feature will leave it
               to infrigement if the entilement in entitlements is r\
\emoved";
          }
          leaf in-use {
            type boolean;
            description
              "Optional argument.Whether the feature use is infrigin\
\g its entilement level.
               It means the feature is in use iwthout an entitlement\
\, or going over a level.
               It should explicitly be set if the asset can report. \
\not reporting this 
               value means its value is not determined by the asset";
          }
        }
      }

      container asset-restrictions {
        list asset-restriction-class {
          key "asset-restriction-class";
          leaf  asset-restriction-class {
            type identityref {
              base entitlement-asset-restriction;
            }
            must "derived-from-or-self(current(), "
               + " 'entitlement-asset-restriction')";
          }

          list asset-restriction {
            key "asset-restriction-id";

            leaf component-id {
              description "If the feature is applied to a specific c\
\omponent of the 
              network-element, specify it";
              type leafref {
                path "../../../../../nwi:components/nwi:component/nw\
\i:component-id";
              }
            }

            leaf asset-restriction-id {
              type string;
              description "Restriction id. It can be meaningless";
            }

            leaf description {
              type string;
              description "A description of the restriction. It shou\
\ld quickly communicate what's being restricted in the asset.";
            }

          }


        }
      }

    }
  }

  identity entitlement-asset-restriction-basic {
    description "Restriction for an asset based on a feature";
    base entitlement-asset-restriction;
  }

  augment "/nwi:network-inventory/nwi:network-elements/nwi:network-e\
\lement/"
        + "entitlement-information/asset-restrictions/asset-restrict\
\ion-class/asset-restriction" {
    when "derived-from-or-self(../asset-restriction-class, "
       + " 'entitlement-asset-restriction-basic')";

      leaf resource-name {
        type string;
      }

      leaf units {
        type string;
      }

      leaf max-value {
        type int32;
      }

      leaf current-value {
        type int32;
      }

    }

  identity entitlement-asset-restriction-feature {
    description "Restriction for an asset based on a feature";
    base entitlement-asset-restriction-basic;
  }

  augment "/nwi:network-inventory/nwi:network-elements/nwi:network-e\
\lement/"
        + "entitlement-information/asset-restrictions/asset-restrict\
\ion-class/asset-restriction" {
    when "derived-from-or-self(../asset-restriction-class, "
       + " 'entitlement-asset-restriction-feature')";

      leaf feature-class {
        type leafref {
          path "../../../../feature-information/feature-use/feature-\
\class";
        }
        description
          "Class of feature to enable";
      }
      leaf feature-id {
        type leafref {
          path "../../../../feature-information/feature-use[feature-\
\class="
          + "current()/../feature-class]/feature-id";
        }
        description
          "Feature that this entitlement enables on the asset";
      }

    }

}
]]></sourcecode></figure>

</section>
<section anchor="use-cases"><name>Use cases</name>

<t>In this section we will describe use cases, an example of how they could be modelled by the model, and show how each of the questions that we have explored in this draft can be answered by the model.</t>

<t>TODO in next versions.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>TODO</t>

</section>
<section anchor="Security"><name>Security Considerations</name>

<t>TODO</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">




<reference anchor="I-D.draft-ietf-ivy-network-inventory-yang-03">
   <front>
      <title>A YANG Data Model for Network Inventory</title>
      <author fullname="Chaode Yu" initials="C." surname="Yu">
         <organization>Huawei Technologies</organization>
      </author>
      <author fullname="Sergio Belotti" initials="S." surname="Belotti">
         <organization>Nokia</organization>
      </author>
      <author fullname="Jean-Francois Bouquier" initials="J." surname="Bouquier">
         <organization>Vodafone</organization>
      </author>
      <author fullname="Fabio Peruzzini" initials="F." surname="Peruzzini">
         <organization>TIM</organization>
      </author>
      <author fullname="Phil Bedard" initials="P." surname="Bedard">
         <organization>Cisco</organization>
      </author>
      <date day="7" month="July" year="2024"/>
      <abstract>
	 <t>   This document defines a base YANG data model for network inventory
   that is application- and technology-agnostic.  This data model can be
   augmented with application-specific and technology-specific details
   in other, more specific network inventory data models.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-ivy-network-inventory-yang-03"/>
   
</reference>




    </references>

</references>



  </back>

<!-- ##markdown-source:
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
mrRiin4wX91vo2A+a6aIi7MXkJb7EyDpJP2INp1nI0zdjs6nBe5p0nXzqL2w
DmDdWobmyWkSPNt2dRF99yOt7uee1X2jTKM7d/GknUd/1V9b1/QtcMnejMKo
08Sg1W2RKpi4I68q2i1GrfIG5Lod0bYUpPYboVEiUbf3po0qb0VMlYnIhdgI
nMkWVb3iI9izB4leSTBIX3PGLICz++Q0Mc9iCW7bjImtOqy7rUYJ1gS/nSYR
HNhuTYwGoYDvGKCLbgKi+UC6ic3dpVFvvXjYd7msJtLXi7YegLw3W1laHQMY
h483SKB6d/R3/EN9qntHf4dvWv2D49twybfbJzn6Jva57U0n/nmDUDhNQrGA
2NV6jew6EJucSQ6L1vKo7nYxRVg6t7S6Couvd0pCj8G74s4MIjaOQ7jhM5tf
w4VZWothJL+6x9gj/ulj04DXVceVmbV5lGx3DTbk++ZcMbiMeuWWPT65Lu9G
Wxg0JPCuPhTX3eHCsc+E2o2acAAMZ12BOQmTz7LcN3OURwCjxokQjLW00UDS
cF9k1U166kXFpaaHtnMZq1XqYS49B6lptej0BwX9thSb9hiuoHQFXWTiWL9O
keh1CcXRxi6h/NjYJZQYHW4a0yOUEUEP1dB6d0zco6cbrM3Z+j91O/e8hrSO
zefXdnMn6z89p+FNoNsjDz1b9jT5EHNLP7HE0xarigjLj7GqQLRYq/oAMyuk
KFa2eph9f0ePWrbvmM7LZdF0E4xi+OzRtIGxDBwLPS6KkGnZeZRR0wR2hC8F
A4bP8Uk4WZ8poyLC/9DlfIhU/g2bxlt/GoWoPTjFU3YNKpxWnYMpCaZf1C5i
Tzsu6nrb6nu7zontTvF7i552dN/nTGTfVZwm3aZW10JF/zqjq2hZmeqJd8Eq
s5nMpwBwzq8aRN6Ppwn9vJ+0M25wMHZrZBGFoNsz0SXpO52HNmM7TbZ1HnZd
MHU6DG0L9TTZykb1uHQIsl/9Nls6BiOaeb8z0AYWOc0+SDrhk9PEkU6xFfU6
AD9oRVGjR63olpKpHx/sDUQQ4zS5mfPCnmyDo8/z8G3l3Au9ehscerYIO022
dOi5t5HbOvHsXts77iz50OWs62jS4aDrcs/1joINOl1yHT2jM8eccP2oFx7X
h11idO+019HXf2VtOn008eOinuXqCVEh/Gk0OU2IfwVPbKkWOPusrXdYY0GL
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
uWHQUD8xjf8HTe7IQSnUAAA=

-->

</rfc>

